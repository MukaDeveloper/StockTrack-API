// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockTrack_API.Data;

#nullable disable

namespace StockTrack_API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockTrack_API.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("ST_AREAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2024, 10, 25, 0, 23, 25, 221, DateTimeKind.Utc).AddTicks(7660),
                            CreatedBy = "Admin",
                            Description = "Área de Testes",
                            InstitutionId = 1,
                            Name = "Teste",
                            UpdatedAt = new DateTime(2024, 10, 25, 0, 23, 25, 221, DateTimeKind.Utc).AddTicks(7660),
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neightboor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ST_INSTITUTIONS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessCode = "000",
                            CEP = "02110010",
                            City = "Sao Paulo",
                            Complement = "",
                            Name = "Servidor de testes",
                            Neightboor = "Vila Guilherme",
                            Nickname = "Testes",
                            State = "SP",
                            StreetName = "Rua Alcantara",
                            StreetNumber = "113"
                        },
                        new
                        {
                            Id = 2,
                            AccessCode = "064",
                            CEP = "02110010",
                            City = "Sao Paulo",
                            Complement = "",
                            Name = "Horácio Augusto da Silveira",
                            Neightboor = "Vila Guilherme",
                            Nickname = "ETEC Prof. Horácio",
                            State = "SP",
                            StreetName = "Rua Alcantara",
                            StreetNumber = "113"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Entities.MaterialTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaterialTypeEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "LOAN"
                        },
                        new
                        {
                            Id = 2,
                            Type = "CONSUMPTION"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Entities.MovimentationEventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovimentationEventEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Event = "ENTRY"
                        },
                        new
                        {
                            Id = 2,
                            Event = "EDIT"
                        },
                        new
                        {
                            Id = 3,
                            Event = "EXIT"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Entities.MovimentationReasonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovimentationReasonEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Reason = "INSERTION"
                        },
                        new
                        {
                            Id = 2,
                            Reason = "EDIT"
                        },
                        new
                        {
                            Id = 3,
                            Reason = "RETURNFROMLOAN"
                        },
                        new
                        {
                            Id = 4,
                            Reason = "RETURNFROMMAINTENANCE"
                        },
                        new
                        {
                            Id = 5,
                            Reason = "DISPOSAL"
                        },
                        new
                        {
                            Id = 6,
                            Reason = "LOAN"
                        },
                        new
                        {
                            Id = 7,
                            Reason = "SENTTOMAINTENANCE"
                        },
                        new
                        {
                            Id = 8,
                            Reason = "REMOVED"
                        },
                        new
                        {
                            Id = 9,
                            Reason = "OTHER"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Entities.MovimentationTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovimentationTypeEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "USER"
                        },
                        new
                        {
                            Id = 2,
                            Type = "AREA"
                        },
                        new
                        {
                            Id = 3,
                            Type = "WAREHOUSE"
                        },
                        new
                        {
                            Id = 4,
                            Type = "MATERIAL"
                        },
                        new
                        {
                            Id = 5,
                            Type = "LOAN"
                        },
                        new
                        {
                            Id = 6,
                            Type = "MAINTENANCE"
                        },
                        new
                        {
                            Id = 7,
                            Type = "GENERAL"
                        },
                        new
                        {
                            Id = 8,
                            Type = "CONSUMPTION"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Entities.UserRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoleEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Role = "USER"
                        },
                        new
                        {
                            Id = 2,
                            Role = "WAREHOUSEMAN"
                        },
                        new
                        {
                            Id = 3,
                            Role = "COORDINATOR"
                        },
                        new
                        {
                            Id = 4,
                            Role = "SUPPORT"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.MaterialStatus", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("MaterialId", "Status");

                    b.ToTable("ST_MATERIALS_STATUS");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            Status = 0,
                            Quantity = 3f
                        },
                        new
                        {
                            MaterialId = 1,
                            Status = 1,
                            Quantity = 1f
                        },
                        new
                        {
                            MaterialId = 1,
                            Status = 2,
                            Quantity = 1f
                        },
                        new
                        {
                            MaterialId = 1,
                            Status = 3,
                            Quantity = 5f
                        },
                        new
                        {
                            MaterialId = 1,
                            Status = 4,
                            Quantity = 1f
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialType")
                        .HasColumnType("int");

                    b.Property<string>("Measure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("ST_MATERIALS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2024, 10, 25, 0, 23, 25, 221, DateTimeKind.Utc).AddTicks(7697),
                            CreatedBy = "",
                            Description = "Notebook ThinkPad",
                            ImageURL = "",
                            InstitutionId = 1,
                            Manufacturer = "ThinkPad",
                            MaterialType = 0,
                            Measure = "UN",
                            Name = "Notebook",
                            RecordNumber = 123456,
                            UpdatedAt = new DateTime(2024, 10, 25, 0, 23, 25, 221, DateTimeKind.Utc).AddTicks(7697),
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.MaterialWarehouses", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "WarehouseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ST_MATERIAL_WAREHOUSES", (string)null);

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Movimentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Event")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("MovimentationBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ST_MOVIMENTATIONS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Date = new DateTime(2024, 10, 24, 21, 23, 25, 221, DateTimeKind.Local).AddTicks(7761),
                            Description = "Adição de área \"Teste\"",
                            Event = 0,
                            InstitutionId = 1,
                            MovimentationBy = "Admin",
                            Name = "Área Teste",
                            Quantity = 1f,
                            Reason = 0,
                            Type = 1
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AccessDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Verified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VerifiedScheduled")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerifiedToken")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ST_USERS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 10, 24, 21, 23, 25, 221, DateTimeKind.Local).AddTicks(7463),
                            Email = "admin@stocktrack.com",
                            Name = "Admin",
                            PasswordHash = new byte[] { 187, 235, 130, 84, 251, 10, 143, 25, 82, 201, 196, 255, 161, 163, 177, 235, 214, 15, 205, 170, 53, 171, 45, 97, 167, 176, 192, 126, 189, 242, 163, 76, 62, 185, 142, 19, 12, 18, 40, 74, 225, 64, 118, 194, 55, 88, 7, 112, 162, 130, 243, 7, 135, 74, 255, 29, 131, 78, 235, 81, 1, 255, 208, 233 },
                            PasswordSalt = new byte[] { 0, 82, 50, 227, 195, 195, 27, 90, 179, 128, 245, 153, 98, 206, 216, 226, 126, 223, 83, 135, 80, 77, 64, 167, 2, 37, 220, 16, 225, 82, 87, 165, 179, 254, 128, 65, 70, 230, 41, 128, 188, 202, 51, 45, 143, 13, 61, 64, 232, 59, 78, 108, 162, 233, 120, 70, 150, 228, 53, 89, 253, 80, 96, 216, 186, 60, 53, 64, 27, 30, 197, 109, 199, 142, 253, 62, 7, 162, 163, 137, 212, 248, 158, 182, 106, 223, 79, 119, 251, 166, 131, 132, 18, 101, 13, 54, 143, 164, 87, 10, 39, 109, 229, 86, 80, 162, 129, 11, 104, 138, 147, 64, 188, 38, 164, 42, 92, 6, 220, 193, 61, 236, 159, 189, 202, 245, 248, 186 },
                            PhotoUrl = "https://imgur.com/mOXzZLE.png",
                            Verified = true,
                            VerifiedAt = new DateTime(2024, 10, 24, 21, 23, 25, 221, DateTimeKind.Local).AddTicks(7473)
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.UserInstitution", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserId", "InstitutionId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("ST_USER_INSTITUTIONS");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            InstitutionId = 1,
                            Active = true,
                            UserRole = 3
                        },
                        new
                        {
                            UserId = 1,
                            InstitutionId = 2,
                            Active = true,
                            UserRole = 2
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("ST_WAREHOUSES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AreaId = 1,
                            CreatedAt = new DateTime(2024, 10, 25, 0, 23, 25, 221, DateTimeKind.Utc).AddTicks(7679),
                            CreatedBy = "",
                            Description = "Almoxarifado de informática",
                            InstitutionId = 1,
                            Name = "Informática",
                            UpdatedAt = new DateTime(2024, 10, 25, 0, 23, 25, 221, DateTimeKind.Utc).AddTicks(7680),
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.WarehouseUsers", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "WarehouseId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ST_WAREHOUSE_USERS", (string)null);
                });

            modelBuilder.Entity("StockTrack_API.Models.Area", b =>
                {
                    b.HasOne("StockTrack_API.Models.Institution", "Institution")
                        .WithMany("Areas")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.MaterialStatus", b =>
                {
                    b.HasOne("StockTrack_API.Models.Material", "Material")
                        .WithMany("Status")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("StockTrack_API.Models.Material", b =>
                {
                    b.HasOne("StockTrack_API.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StockTrack_API.Models.MaterialWarehouses", b =>
                {
                    b.HasOne("StockTrack_API.Models.Material", "Material")
                        .WithMany("MaterialWarehouses")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockTrack_API.Models.Warehouse", "Warehouse")
                        .WithMany("MaterialWarehouses")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StockTrack_API.Models.Movimentation", b =>
                {
                    b.HasOne("StockTrack_API.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("StockTrack_API.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("StockTrack_API.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("StockTrack_API.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Area");

                    b.Navigation("Material");

                    b.Navigation("User");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StockTrack_API.Models.UserInstitution", b =>
                {
                    b.HasOne("StockTrack_API.Models.Institution", "Institution")
                        .WithMany("Users")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockTrack_API.Models.User", "User")
                        .WithMany("UserInstitutions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockTrack_API.Models.Warehouse", b =>
                {
                    b.HasOne("StockTrack_API.Models.Area", "Area")
                        .WithMany("Warehouses")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockTrack_API.Models.Institution", "Institution")
                        .WithMany()
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StockTrack_API.Models.WarehouseUsers", b =>
                {
                    b.HasOne("StockTrack_API.Models.User", "User")
                        .WithMany("WarehouseUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockTrack_API.Models.Warehouse", "Warehouse")
                        .WithMany("Warehousemans")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StockTrack_API.Models.Area", b =>
                {
                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("StockTrack_API.Models.Institution", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("StockTrack_API.Models.Material", b =>
                {
                    b.Navigation("MaterialWarehouses");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("StockTrack_API.Models.User", b =>
                {
                    b.Navigation("UserInstitutions");

                    b.Navigation("WarehouseUsers");
                });

            modelBuilder.Entity("StockTrack_API.Models.Warehouse", b =>
                {
                    b.Navigation("MaterialWarehouses");

                    b.Navigation("Warehousemans");
                });
#pragma warning restore 612, 618
        }
    }
}

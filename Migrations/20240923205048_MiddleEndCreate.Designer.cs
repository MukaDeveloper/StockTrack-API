// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockTrack_API.Data;

#nullable disable

namespace StockTrack_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240923205048_MiddleEndCreate")]
    partial class MiddleEndCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockTrack_API.Models.Entities.MovimentationEventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovimentationEventEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Event = "Area"
                        },
                        new
                        {
                            Id = 2,
                            Event = "Warehouse"
                        },
                        new
                        {
                            Id = 3,
                            Event = "Material"
                        },
                        new
                        {
                            Id = 4,
                            Event = "Loan"
                        },
                        new
                        {
                            Id = 5,
                            Event = "Maintenance"
                        },
                        new
                        {
                            Id = 6,
                            Event = "General"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Entities.MovimentationTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovimentationTypeEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "ENTRY"
                        },
                        new
                        {
                            Id = 2,
                            Type = "EXIT"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Entities.UserRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoleEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USER"
                        },
                        new
                        {
                            Id = 2,
                            Name = "WAREHOUSEMAN"
                        },
                        new
                        {
                            Id = 3,
                            Name = "COORDINATOR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SUPPORT"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("ST_AREAS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2024, 9, 23, 20, 50, 47, 844, DateTimeKind.Utc).AddTicks(59),
                            CreatedBy = "Admin",
                            Description = "Área de Testes",
                            InstitutionId = 1,
                            InstitutionName = "Servidor de testes",
                            Name = "Teste",
                            UpdatedAt = new DateTime(2024, 9, 23, 20, 50, 47, 844, DateTimeKind.Utc).AddTicks(65),
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Neightboor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StreetNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ST_INSTITUTIONS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CEP = "02110010",
                            City = "Sao Paulo",
                            Complement = "",
                            Name = "Servidor de testes",
                            Neightboor = "Vila Guilherme",
                            Nickname = "Testes",
                            State = "SP",
                            StreetName = "Rua Alcantara",
                            StreetNumber = "113"
                        },
                        new
                        {
                            Id = 64,
                            CEP = "02110010",
                            City = "Sao Paulo",
                            Complement = "",
                            Name = "Horácio Augusto da Silveira",
                            Neightboor = "Vila Guilherme",
                            Nickname = "ETEC Prof. Horácio",
                            State = "SP",
                            StreetName = "Rua Alcantara",
                            StreetNumber = "113"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaterialType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecordNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ST_MATERIALS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AreaId = 1,
                            CreatedAt = new DateTime(2024, 9, 23, 20, 50, 47, 844, DateTimeKind.Utc).AddTicks(197),
                            CreatedBy = "",
                            Description = "Notebook ThinkPad",
                            ImageURL = "",
                            InstitutionId = 1,
                            InstitutionName = "Servidor de testes",
                            Manufacturer = "ThinkPad",
                            MaterialType = 0,
                            Name = "Notebook",
                            RecordNumber = 123456,
                            UpdatedAt = new DateTime(2024, 9, 23, 20, 50, 47, 844, DateTimeKind.Utc).AddTicks(197),
                            UpdatedBy = "",
                            WarehouseId = 1
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Movimentation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Event")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.Property<string>("MovimentationBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("Reason")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("MaterialId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("ST_MOVIMENTATIONS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Date = new DateTime(2024, 9, 23, 17, 50, 47, 844, DateTimeKind.Local).AddTicks(253),
                            Description = "Adição de área \"Teste\"",
                            Event = 1,
                            InstitutionId = 1,
                            MovimentationBy = "Admin",
                            Name = "Área Teste",
                            Quantity = 1f,
                            Reason = 1,
                            Type = 1
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("AccessDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ST_USERS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            Email = "admin@stocktrack.com",
                            Name = "Admin",
                            PasswordHash = new byte[] { 27, 123, 7, 251, 51, 189, 77, 206, 29, 106, 21, 81, 97, 79, 145, 78, 52, 176, 249, 231, 170, 241, 219, 55, 47, 23, 126, 57, 35, 214, 166, 172, 30, 25, 26, 80, 95, 92, 243, 188, 36, 234, 230, 84, 189, 109, 234, 106, 251, 143, 44, 128, 171, 158, 54, 224, 224, 59, 22, 237, 176, 188, 132, 96 },
                            PasswordSalt = new byte[] { 162, 231, 68, 233, 181, 252, 137, 112, 146, 4, 223, 159, 200, 243, 245, 60, 195, 247, 72, 241, 250, 65, 55, 77, 158, 212, 247, 54, 215, 105, 230, 210, 44, 120, 35, 24, 95, 15, 235, 141, 149, 196, 154, 127, 42, 72, 5, 58, 155, 214, 128, 207, 82, 255, 216, 68, 156, 215, 29, 227, 174, 226, 227, 3, 124, 53, 157, 33, 44, 254, 49, 148, 46, 230, 235, 50, 62, 73, 18, 167, 143, 185, 78, 250, 70, 238, 41, 183, 34, 11, 18, 111, 91, 93, 71, 124, 168, 112, 32, 222, 123, 128, 3, 9, 73, 216, 186, 215, 245, 161, 128, 120, 170, 118, 41, 140, 169, 160, 83, 54, 31, 91, 16, 59, 142, 235, 67, 219 },
                            PhotoUrl = "https://imgur.com/mOXzZLE.png"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.UserInstitution", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.HasKey("UserId", "InstitutionId");

                    b.ToTable("ST_USER_INSTITUTIONS");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            InstitutionId = 1,
                            InstitutionName = "Servidor de testes",
                            UserName = "Admin",
                            UserRole = 4
                        },
                        new
                        {
                            UserId = 1,
                            InstitutionId = 64,
                            InstitutionName = "Horácio Augusto da Silveira",
                            UserName = "Admin",
                            UserRole = 3
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("ST_WAREHOUSES", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AreaId = 1,
                            CreatedAt = new DateTime(2024, 9, 23, 20, 50, 47, 844, DateTimeKind.Utc).AddTicks(116),
                            CreatedBy = "",
                            Description = "Almoxarifado de informática",
                            InstitutionId = 1,
                            InstitutionName = "Servidor de testes",
                            Name = "Informática",
                            UpdatedAt = new DateTime(2024, 9, 23, 20, 50, 47, 844, DateTimeKind.Utc).AddTicks(117),
                            UpdatedBy = ""
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.MovimentationReasonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MovimentationReasonEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Reason = "Insertion"
                        },
                        new
                        {
                            Id = 2,
                            Reason = "Edit"
                        },
                        new
                        {
                            Id = 3,
                            Reason = "ReturnFromLoan"
                        },
                        new
                        {
                            Id = 4,
                            Reason = "ReturnFromMaintenance"
                        },
                        new
                        {
                            Id = 5,
                            Reason = "Disposal"
                        },
                        new
                        {
                            Id = 6,
                            Reason = "Loan"
                        },
                        new
                        {
                            Id = 7,
                            Reason = "SentToMaintenance"
                        },
                        new
                        {
                            Id = 8,
                            Reason = "Removed"
                        },
                        new
                        {
                            Id = 9,
                            Reason = "Other"
                        });
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Area", b =>
                {
                    b.HasOne("StockTrack_API.Models.Interfaces.Institution", "Institution")
                        .WithMany("Areas")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Material", b =>
                {
                    b.HasOne("StockTrack_API.Models.Interfaces.Warehouse", "Warehouse")
                        .WithMany("Materials")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Movimentation", b =>
                {
                    b.HasOne("StockTrack_API.Models.Interfaces.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("StockTrack_API.Models.Interfaces.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.HasOne("StockTrack_API.Models.Interfaces.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("StockTrack_API.Models.Interfaces.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");

                    b.Navigation("Area");

                    b.Navigation("Material");

                    b.Navigation("User");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.UserInstitution", b =>
                {
                    b.HasOne("StockTrack_API.Models.Interfaces.Institution", "Institution")
                        .WithMany("UserInstitutions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockTrack_API.Models.Interfaces.User", "User")
                        .WithMany("UserInstitutions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Warehouse", b =>
                {
                    b.HasOne("StockTrack_API.Models.Interfaces.Area", "Area")
                        .WithMany("Warehouses")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Area", b =>
                {
                    b.Navigation("Warehouses");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Institution", b =>
                {
                    b.Navigation("Areas");

                    b.Navigation("UserInstitutions");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.User", b =>
                {
                    b.Navigation("UserInstitutions");
                });

            modelBuilder.Entity("StockTrack_API.Models.Interfaces.Warehouse", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
